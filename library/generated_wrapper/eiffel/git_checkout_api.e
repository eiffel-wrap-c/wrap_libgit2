note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"
-- functions wrapper
class GIT_CHECKOUT_API


feature -- Access

	git_checkout_options_init (opts: GIT_CHECKOUT_OPTIONS_STRUCT_API; version: INTEGER): INTEGER 
		do
			Result := c_git_checkout_options_init (opts.item, version)
		ensure
			instance_free: class
		end

	git_checkout_head (repo: GIT_REPOSITORY_STRUCT_API; opts: GIT_CHECKOUT_OPTIONS_STRUCT_API): INTEGER 
		do
			Result := c_git_checkout_head (repo.item, opts.item)
		ensure
			instance_free: class
		end

	git_checkout_index (repo: GIT_REPOSITORY_STRUCT_API; index: GIT_INDEX_STRUCT_API; opts: GIT_CHECKOUT_OPTIONS_STRUCT_API): INTEGER 
		do
			Result := c_git_checkout_index (repo.item, index.item, opts.item)
		ensure
			instance_free: class
		end

	git_checkout_tree (repo: GIT_REPOSITORY_STRUCT_API; treeish: GIT_OBJECT_STRUCT_API; opts: GIT_CHECKOUT_OPTIONS_STRUCT_API): INTEGER 
		do
			Result := c_git_checkout_tree (repo.item, treeish.item, opts.item)
		ensure
			instance_free: class
		end

	git_checkout_init_options (opts: GIT_CHECKOUT_OPTIONS_STRUCT_API; version: INTEGER): INTEGER 
		do
			Result := c_git_checkout_init_options (opts.item, version)
		ensure
			instance_free: class
		end

feature -- Externals

	c_git_checkout_options_init (opts: POINTER; version: INTEGER): INTEGER
		external
			"C inline use <git2.h>"
		alias
			"[
				return git_checkout_options_init ((git_checkout_options*)$opts, (unsigned int)$version);
			]"
		end

	c_git_checkout_head (repo: POINTER; opts: POINTER): INTEGER
		external
			"C inline use <git2.h>"
		alias
			"[
				return git_checkout_head ((git_repository*)$repo, (git_checkout_options const*)$opts);
			]"
		end

	c_git_checkout_index (repo: POINTER; index: POINTER; opts: POINTER): INTEGER
		external
			"C inline use <git2.h>"
		alias
			"[
				return git_checkout_index ((git_repository*)$repo, (git_index*)$index, (git_checkout_options const*)$opts);
			]"
		end

	c_git_checkout_tree (repo: POINTER; treeish: POINTER; opts: POINTER): INTEGER
		external
			"C inline use <git2.h>"
		alias
			"[
				return git_checkout_tree ((git_repository*)$repo, (git_object const*)$treeish, (git_checkout_options const*)$opts);
			]"
		end

	c_git_checkout_init_options (opts: POINTER; version: INTEGER): INTEGER
		external
			"C inline use <git2.h>"
		alias
			"[
				return git_checkout_init_options ((git_checkout_options*)$opts, (unsigned int)$version);
			]"
		end

feature -- Externals Address

end
