note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class GIT_CRED_USERPASS_PLAINTEXT_STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	parent: GIT_CRED_STRUCT_API
			-- Access member `parent`
		require
			exists: exists
		do
			create Result.make_by_pointer ( c_parent(item) )
		ensure
			result_not_void: Result.item = c_parent (item) 
		end

	set_parent (a_value: GIT_CRED_STRUCT_API) 
			-- Set member `parent`
		require
			a_value_not_void: a_value /= Void
			exists: exists
		do
			set_c_parent (item, a_value.item)
		ensure
			parent_set: parent.item = a_value.item
		end

	username:  detachable STRING
			-- Access member `username`
		require
			exists: exists
		do
			if attached c_username (item) as l_ptr then
				Result := (create {C_STRING}.make_by_pointer (l_ptr)).string
			end
		ensure
			result_void: Result = Void implies c_username (item) = default_pointer
			result_not_void: attached Result as l_result implies l_result.same_string ((create {C_STRING}.make_by_pointer (item)).string)
		end

	set_username (a_value: STRING) 
			-- Change the value of member `username` to `a_value`.
		require
			exists: exists
		do
			set_c_username (item, (create {C_STRING}.make (a_value)).item )
		end

	password:  detachable STRING
			-- Access member `password`
		require
			exists: exists
		do
			if attached c_password (item) as l_ptr then
				Result := (create {C_STRING}.make_by_pointer (l_ptr)).string
			end
		ensure
			result_void: Result = Void implies c_password (item) = default_pointer
			result_not_void: attached Result as l_result implies l_result.same_string ((create {C_STRING}.make_by_pointer (item)).string)
		end

	set_password (a_value: STRING) 
			-- Change the value of member `password` to `a_value`.
		require
			exists: exists
		do
			set_c_password (item, (create {C_STRING}.make (a_value)).item )
		end

feature {NONE} -- Implementation wrapper for struct git_cred_userpass_plaintext

	sizeof_external: INTEGER 
		external
			"C inline use <git2.h>"
		alias
			"sizeof(git_cred_userpass_plaintext)"
		end

	c_parent (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <git2.h>"
		alias
			"[
				&((git_cred_userpass_plaintext*)$an_item)->parent
			]"
		end

	set_c_parent (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <git2.h>"
		alias
			"[
				((git_cred_userpass_plaintext*)$an_item)->parent =  *(git_cred*)$a_value
			]"
		end

	c_username (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <git2.h>"
		alias
			"[
				((git_cred_userpass_plaintext*)$an_item)->username
			]"
		end

	set_c_username (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <git2.h>"
		alias
			"[
				((git_cred_userpass_plaintext*)$an_item)->username =  (char*)$a_value
			]"
		ensure
			username_set: a_value = c_username (an_item)
		end

	c_password (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <git2.h>"
		alias
			"[
				((git_cred_userpass_plaintext*)$an_item)->password
			]"
		end

	set_c_password (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <git2.h>"
		alias
			"[
				((git_cred_userpass_plaintext*)$an_item)->password =  (char*)$a_value
			]"
		ensure
			password_set: a_value = c_password (an_item)
		end

end
