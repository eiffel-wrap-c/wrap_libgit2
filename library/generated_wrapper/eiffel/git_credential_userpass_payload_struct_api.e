note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class GIT_CREDENTIAL_USERPASS_PAYLOAD_STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	username:  detachable C_STRING
			-- Access member `username`
		require
			exists: exists
		do
			if attached c_username (item) as l_ptr then
				create Result.make_by_pointer (l_ptr)
			end
		ensure
			result_void: Result = Void implies c_username (item) = default_pointer
			result_not_void: attached Result as l_result implies l_result.string.same_string ((create {C_STRING}.make_by_pointer (item)).string)
		end

	set_username (a_value: C_STRING) 
			-- Change the value of member `username` to `a_value`.
		require
			exists: exists
		do
			set_c_username (item, a_value.item )
		end

	password:  detachable C_STRING
			-- Access member `password`
		require
			exists: exists
		do
			if attached c_password (item) as l_ptr then
				create Result.make_by_pointer (l_ptr)
			end
		ensure
			result_void: Result = Void implies c_password (item) = default_pointer
			result_not_void: attached Result as l_result implies l_result.string.same_string ((create {C_STRING}.make_by_pointer (item)).string)
		end

	set_password (a_value: C_STRING) 
			-- Change the value of member `password` to `a_value`.
		require
			exists: exists
		do
			set_c_password (item, a_value.item )
		end

feature {NONE} -- Implementation wrapper for struct struct git_credential_userpass_payload

	sizeof_external: INTEGER 
		external
			"C inline use <git2.h>"
		alias
			"sizeof(struct git_credential_userpass_payload)"
		end

	c_username (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <git2.h>"
		alias
			"[
				((struct git_credential_userpass_payload*)$an_item)->username
			]"
		end

	set_c_username (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <git2.h>"
		alias
			"[
				((struct git_credential_userpass_payload*)$an_item)->username =  (char const*)$a_value
			]"
		ensure
			username_set: a_value = c_username (an_item)
		end

	c_password (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <git2.h>"
		alias
			"[
				((struct git_credential_userpass_payload*)$an_item)->password
			]"
		end

	set_c_password (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <git2.h>"
		alias
			"[
				((struct git_credential_userpass_payload*)$an_item)->password =  (char const*)$a_value
			]"
		ensure
			password_set: a_value = c_password (an_item)
		end

end
