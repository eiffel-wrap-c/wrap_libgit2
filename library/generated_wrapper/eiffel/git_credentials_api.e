note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"
-- functions wrapper
class GIT_CREDENTIALS_API


feature -- Access

	git_cred_has_username (cred: GIT_CRED_STRUCT_API): INTEGER 
		do
			Result := c_git_cred_has_username (cred.item)
		end

	git_cred_userpass_plaintext_new (a_out: GIT_CRED_STRUCT_API; username: STRING; password: STRING): INTEGER 
		local
			username_c_string: C_STRING
			password_c_string: C_STRING
		do
			create username_c_string.make (username)
			create password_c_string.make (password)
			Result := c_git_cred_userpass_plaintext_new (a_out.item, username_c_string.item, password_c_string.item)
		end

	git_cred_ssh_key_new (a_out: GIT_CRED_STRUCT_API; username: STRING; publickey: STRING; privatekey: STRING; passphrase: STRING): INTEGER 
		local
			username_c_string: C_STRING
			publickey_c_string: C_STRING
			privatekey_c_string: C_STRING
			passphrase_c_string: C_STRING
		do
			create username_c_string.make (username)
			create publickey_c_string.make (publickey)
			create privatekey_c_string.make (privatekey)
			create passphrase_c_string.make (passphrase)
			Result := c_git_cred_ssh_key_new (a_out.item, username_c_string.item, publickey_c_string.item, privatekey_c_string.item, passphrase_c_string.item)
		end

	git_cred_ssh_interactive_new (a_out: GIT_CRED_STRUCT_API; username: STRING; prompt_callback: POINTER; payload: POINTER): INTEGER 
		local
			username_c_string: C_STRING
		do
			create username_c_string.make (username)
			Result := c_git_cred_ssh_interactive_new (a_out.item, username_c_string.item, prompt_callback, payload)
		end

	git_cred_ssh_key_from_agent (a_out: GIT_CRED_STRUCT_API; username: STRING): INTEGER 
		local
			username_c_string: C_STRING
		do
			create username_c_string.make (username)
			Result := c_git_cred_ssh_key_from_agent (a_out.item, username_c_string.item)
		end

	git_cred_ssh_custom_new (a_out: GIT_CRED_STRUCT_API; username: STRING; publickey: STRING; publickey_len: INTEGER; sign_callback: POINTER; payload: POINTER): INTEGER 
		local
			username_c_string: C_STRING
			publickey_c_string: C_STRING
		do
			create username_c_string.make (username)
			create publickey_c_string.make (publickey)
			Result := c_git_cred_ssh_custom_new (a_out.item, username_c_string.item, publickey_c_string.item, publickey_len, sign_callback, payload)
		end

	git_cred_default_new (a_out: GIT_CRED_STRUCT_API): INTEGER 
		do
			Result := c_git_cred_default_new (a_out.item)
		end

	git_cred_username_new (cred: GIT_CRED_STRUCT_API; username: STRING): INTEGER 
		local
			username_c_string: C_STRING
		do
			create username_c_string.make (username)
			Result := c_git_cred_username_new (cred.item, username_c_string.item)
		end

	git_cred_ssh_key_memory_new (a_out: GIT_CRED_STRUCT_API; username: STRING; publickey: STRING; privatekey: STRING; passphrase: STRING): INTEGER 
		local
			username_c_string: C_STRING
			publickey_c_string: C_STRING
			privatekey_c_string: C_STRING
			passphrase_c_string: C_STRING
		do
			create username_c_string.make (username)
			create publickey_c_string.make (publickey)
			create privatekey_c_string.make (privatekey)
			create passphrase_c_string.make (passphrase)
			Result := c_git_cred_ssh_key_memory_new (a_out.item, username_c_string.item, publickey_c_string.item, privatekey_c_string.item, passphrase_c_string.item)
		end

	git_cred_free (cred: GIT_CRED_STRUCT_API) 
		do
			c_git_cred_free (cred.item)
		end

feature -- Externals

	c_git_cred_has_username (cred: POINTER): INTEGER
		external
			"C inline use <git2.h>"
		alias
			"[
				return git_cred_has_username ((git_cred*)$cred);
			]"
		end

	c_git_cred_userpass_plaintext_new (a_out: POINTER; username: POINTER; password: POINTER): INTEGER
		external
			"C inline use <git2.h>"
		alias
			"[
				return git_cred_userpass_plaintext_new ((git_cred**)$a_out, (char const*)$username, (char const*)$password);
			]"
		end

	c_git_cred_ssh_key_new (a_out: POINTER; username: POINTER; publickey: POINTER; privatekey: POINTER; passphrase: POINTER): INTEGER
		external
			"C inline use <git2.h>"
		alias
			"[
				return git_cred_ssh_key_new ((git_cred**)$a_out, (char const*)$username, (char const*)$publickey, (char const*)$privatekey, (char const*)$passphrase);
			]"
		end

	c_git_cred_ssh_interactive_new (a_out: POINTER; username: POINTER; prompt_callback: POINTER; payload: POINTER): INTEGER
		external
			"C inline use <git2.h>"
		alias
			"[
				return git_cred_ssh_interactive_new ((git_cred**)$a_out, (char const*)$username, (git_cred_ssh_interactive_callback)$prompt_callback, (void*)$payload);
			]"
		end

	c_git_cred_ssh_key_from_agent (a_out: POINTER; username: POINTER): INTEGER
		external
			"C inline use <git2.h>"
		alias
			"[
				return git_cred_ssh_key_from_agent ((git_cred**)$a_out, (char const*)$username);
			]"
		end

	c_git_cred_ssh_custom_new (a_out: POINTER; username: POINTER; publickey: POINTER; publickey_len: INTEGER; sign_callback: POINTER; payload: POINTER): INTEGER
		external
			"C inline use <git2.h>"
		alias
			"[
				return git_cred_ssh_custom_new ((git_cred**)$a_out, (char const*)$username, (char const*)$publickey, (size_t)$publickey_len, (git_cred_sign_callback)$sign_callback, (void*)$payload);
			]"
		end

	c_git_cred_default_new (a_out: POINTER): INTEGER
		external
			"C inline use <git2.h>"
		alias
			"[
				return git_cred_default_new ((git_cred**)$a_out);
			]"
		end

	c_git_cred_username_new (cred: POINTER; username: POINTER): INTEGER
		external
			"C inline use <git2.h>"
		alias
			"[
				return git_cred_username_new ((git_cred**)$cred, (char const*)$username);
			]"
		end

	c_git_cred_ssh_key_memory_new (a_out: POINTER; username: POINTER; publickey: POINTER; privatekey: POINTER; passphrase: POINTER): INTEGER
		external
			"C inline use <git2.h>"
		alias
			"[
				return git_cred_ssh_key_memory_new ((git_cred**)$a_out, (char const*)$username, (char const*)$publickey, (char const*)$privatekey, (char const*)$passphrase);
			]"
		end

	c_git_cred_free (cred: POINTER)
		external
			"C inline use <git2.h>"
		alias
			"[
				git_cred_free ((git_cred*)$cred);
			]"
		end

feature -- Externals Address

end
