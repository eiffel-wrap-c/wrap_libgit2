note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"
-- functions wrapper
class GIT_DESCRIBE_API


feature -- Access

	git_describe_options_init (opts: GIT_DESCRIBE_OPTIONS_STRUCT_API; version: INTEGER): INTEGER 
		do
			Result := c_git_describe_options_init (opts.item, version)
		end

	git_describe_format_options_init (opts: GIT_DESCRIBE_FORMAT_OPTIONS_STRUCT_API; version: INTEGER): INTEGER 
		do
			Result := c_git_describe_format_options_init (opts.item, version)
		end

	git_describe_commit (a_result: GIT_DESCRIBE_RESULT_STRUCT_API; committish: GIT_OBJECT_STRUCT_API; opts: GIT_DESCRIBE_OPTIONS_STRUCT_API): INTEGER 
		do
			Result := c_git_describe_commit (a_result.item, committish.item, opts.item)
		end

	git_describe_workdir (a_out: GIT_DESCRIBE_RESULT_STRUCT_API; repo: GIT_REPOSITORY_STRUCT_API; opts: GIT_DESCRIBE_OPTIONS_STRUCT_API): INTEGER 
		do
			Result := c_git_describe_workdir (a_out.item, repo.item, opts.item)
		end

	git_describe_format (a_out: GIT_BUF_STRUCT_API; a_result: GIT_DESCRIBE_RESULT_STRUCT_API; opts: GIT_DESCRIBE_FORMAT_OPTIONS_STRUCT_API): INTEGER 
		do
			Result := c_git_describe_format (a_out.item, a_result.item, opts.item)
		end

	git_describe_result_free (a_result: GIT_DESCRIBE_RESULT_STRUCT_API) 
		do
			c_git_describe_result_free (a_result.item)
		end

	git_describe_init_options (opts: GIT_DESCRIBE_OPTIONS_STRUCT_API; version: INTEGER): INTEGER 
		do
			Result := c_git_describe_init_options (opts.item, version)
		end

	git_describe_init_format_options (opts: GIT_DESCRIBE_FORMAT_OPTIONS_STRUCT_API; version: INTEGER): INTEGER 
		do
			Result := c_git_describe_init_format_options (opts.item, version)
		end

feature -- Externals

	c_git_describe_options_init (opts: POINTER; version: INTEGER): INTEGER
		external
			"C inline use <git2.h>"
		alias
			"[
				return git_describe_options_init ((git_describe_options*)$opts, (unsigned int)$version);
			]"
		end

	c_git_describe_format_options_init (opts: POINTER; version: INTEGER): INTEGER
		external
			"C inline use <git2.h>"
		alias
			"[
				return git_describe_format_options_init ((git_describe_format_options*)$opts, (unsigned int)$version);
			]"
		end

	c_git_describe_commit (a_result: POINTER; committish: POINTER; opts: POINTER): INTEGER
		external
			"C inline use <git2.h>"
		alias
			"[
				return git_describe_commit ((git_describe_result**)$a_result, (git_object*)$committish, (git_describe_options*)$opts);
			]"
		end

	c_git_describe_workdir (a_out: POINTER; repo: POINTER; opts: POINTER): INTEGER
		external
			"C inline use <git2.h>"
		alias
			"[
				return git_describe_workdir ((git_describe_result**)$a_out, (git_repository*)$repo, (git_describe_options*)$opts);
			]"
		end

	c_git_describe_format (a_out: POINTER; a_result: POINTER; opts: POINTER): INTEGER
		external
			"C inline use <git2.h>"
		alias
			"[
				return git_describe_format ((git_buf*)$a_out, (git_describe_result const*)$a_result, (git_describe_format_options const*)$opts);
			]"
		end

	c_git_describe_result_free (a_result: POINTER)
		external
			"C inline use <git2.h>"
		alias
			"[
				git_describe_result_free ((git_describe_result*)$a_result);
			]"
		end

	c_git_describe_init_options (opts: POINTER; version: INTEGER): INTEGER
		external
			"C inline use <git2.h>"
		alias
			"[
				return git_describe_init_options ((git_describe_options*)$opts, (unsigned int)$version);
			]"
		end

	c_git_describe_init_format_options (opts: POINTER; version: INTEGER): INTEGER
		external
			"C inline use <git2.h>"
		alias
			"[
				return git_describe_init_format_options ((git_describe_format_options*)$opts, (unsigned int)$version);
			]"
		end

feature -- Externals Address

end
