note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class GIT_STRARRAY_STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	strings: POINTER
			-- Access member `strings`
		require
			exists: exists
		do
			Result := c_strings (item)
		ensure
			result_correct: Result = c_strings (item)
		end

	set_strings (a_value: POINTER) 
			-- Change the value of member `strings` to `a_value`.
		require
			exists: exists
		do
			set_c_strings (item, a_value)
		ensure
			strings_set: a_value = strings
		end

	count: INTEGER
			-- Access member `count`
		require
			exists: exists
		do
			Result := c_count (item)
		ensure
			result_correct: Result = c_count (item)
		end

	set_count (a_value: INTEGER) 
			-- Change the value of member `count` to `a_value`.
		require
			exists: exists
		do
			set_c_count (item, a_value)
		ensure
			count_set: a_value = count
		end

feature {NONE} -- Implementation wrapper for struct struct git_strarray

	sizeof_external: INTEGER 
		external
			"C inline use <git2.h>"
		alias
			"sizeof(struct git_strarray)"
		end

	c_strings (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <git2.h>"
		alias
			"[
				((struct git_strarray*)$an_item)->strings
			]"
		end

	set_c_strings (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <git2.h>"
		alias
			"[
				((struct git_strarray*)$an_item)->strings =  (char**)$a_value
			]"
		ensure
			strings_set: a_value = c_strings (an_item)
		end

	c_count (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <git2.h>"
		alias
			"[
				((struct git_strarray*)$an_item)->count
			]"
		end

	set_c_count (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <git2.h>"
		alias
			"[
				((struct git_strarray*)$an_item)->count =  (size_t)$a_value
			]"
		ensure
			count_set: a_value = c_count (an_item)
		end

end
