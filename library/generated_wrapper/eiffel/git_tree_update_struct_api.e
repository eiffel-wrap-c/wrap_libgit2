note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class GIT_TREE_UPDATE_STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	action: INTEGER
			-- Access member `action`
		require
			exists: exists
		do
			Result := c_action (item)
		ensure
			result_correct: Result = c_action (item)
		end

	set_action (a_value: INTEGER) 
			-- Change the value of member `action` to `a_value`.
		require
			exists: exists
		do
			set_c_action (item, a_value)
		ensure
			action_set: a_value = action
		end

	id: GIT_OID_STRUCT_API
			-- Access member `id`
		require
			exists: exists
		do
			create Result.make_by_pointer ( c_id(item) )
		ensure
			result_not_void: Result.item = c_id (item) 
		end

	set_id (a_value: GIT_OID_STRUCT_API) 
			-- Set member `id`
		require
			a_value_not_void: a_value /= Void
			exists: exists
		do
			set_c_id (item, a_value.item)
		ensure
			id_set: id.item = a_value.item
		end

	filemode: INTEGER
			-- Access member `filemode`
		require
			exists: exists
		do
			Result := c_filemode (item)
		ensure
			result_correct: Result = c_filemode (item)
		end

	set_filemode (a_value: INTEGER) 
			-- Change the value of member `filemode` to `a_value`.
		require
			exists: exists
		do
			set_c_filemode (item, a_value)
		ensure
			filemode_set: a_value = filemode
		end

	path:  detachable C_STRING
			-- Access member `path`
		require
			exists: exists
		do
			if attached c_path (item) as l_ptr then
				create Result.make_by_pointer (l_ptr)
			end
		ensure
			result_void: Result = Void implies c_path (item) = default_pointer
			result_not_void: attached Result as l_result implies l_result.string.same_string ((create {C_STRING}.make_by_pointer (item)).string)
		end

	set_path (a_value: C_STRING) 
			-- Change the value of member `path` to `a_value`.
		require
			exists: exists
		do
			set_c_path (item, a_value.item )
		end

feature {NONE} -- Implementation wrapper for struct git_tree_update

	sizeof_external: INTEGER 
		external
			"C inline use <git2.h>"
		alias
			"sizeof(git_tree_update)"
		end

	c_action (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <git2.h>"
		alias
			"[
				((git_tree_update*)$an_item)->action
			]"
		end

	set_c_action (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <git2.h>"
		alias
			"[
				((git_tree_update*)$an_item)->action =  (git_tree_update_t)$a_value
			]"
		ensure
			action_set: a_value = c_action (an_item)
		end

	c_id (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <git2.h>"
		alias
			"[
				&((git_tree_update*)$an_item)->id
			]"
		end

	set_c_id (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <git2.h>"
		alias
			"[
				((git_tree_update*)$an_item)->id =  *(git_oid*)$a_value
			]"
		end

	c_filemode (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <git2.h>"
		alias
			"[
				((git_tree_update*)$an_item)->filemode
			]"
		end

	set_c_filemode (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <git2.h>"
		alias
			"[
				((git_tree_update*)$an_item)->filemode =  (git_filemode_t)$a_value
			]"
		ensure
			filemode_set: a_value = c_filemode (an_item)
		end

	c_path (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <git2.h>"
		alias
			"[
				((git_tree_update*)$an_item)->path
			]"
		end

	set_c_path (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <git2.h>"
		alias
			"[
				((git_tree_update*)$an_item)->path =  (char const*)$a_value
			]"
		ensure
			path_set: a_value = c_path (an_item)
		end

end
